01 上周内容回顾
    深浅copy:
        浅copy：内存中创建一个新列表，但是列表里面的内容还是沿用之前的指向关系。
        深copy：内存中创建一个新的列表以及可变的数据类型，不可变的数据类型沿用之前的指向关系。

    文件操作：
        path，encoding mode
        读 r rb r+ r+b
            r:
                read()
                read(n)
                readline()
                readlines()
                for 循环

        写 w wb w+ w+b
            w:没有文件创建文件，有文件清空内容，在写入。

        追加：a a+.....
            a:没有文件创建文件，有文件在文件末尾追加内容。

        f = open(path,encoding='utf-8',mode='r')
        f.read()
        f.close()

        with open(path,encoding='utf-8',mode='r') as f1, open() ... as f2:
            f1.read()
            f2.write()

        tell()
        seek()
        truncate()
        readable()
        writable()
        f.flush()

        文件的改的操作：
            pass
    函数：
        1，一个函数封装一个功能。
        2，
        def func(参数):
            函数体
        func()

        函数的返回值：
            return：
                1，结束函数。
                2，给函数的执行者func()返回值。
                    return  单个值
                    return  多个值 1,2,[1,2,3]
                    func() ---> (1,2,[1,2,3])
        函数的参数：
            def func(参数):
                函数体
            func(参数)

            1，实参：
                    a, 位置参数：从左至右一一对应。
                    b, 关键字参数：name='alex' 一一对应。
                    c, 混合参数。关键字参数一定要在位置参数后面。
            2，形参：
                    a, 位置参数：从左至右一一对应。
                    b, 默认参数。一定要放在位置参数后面。
                    c, 万能参数。*args，**kwargs。
            形参角度：位置参数，*args，默认参数，**kwargs

            def func(*args,**kwargs): 函数的定义：*代表聚合。
                print(args)
                print(kwargs)
            func(*[1,2,43],**{'name':'alex'}) # 函数的执行：*代表打散。

            名称空间：全局名称空间：变量与值得对应关系。
            局部名称空间：临时名称空间.
            内置名称空间：存放的是内置函数等。

            加载顺序：内置名称空间   全局名称空间  临时名称空间
            取值顺序：就近原则。

            globals() locals()

            函数的嵌套：
            pass

            函数名的应用：
                1，函数名是一个特殊的变量。
                2，函数名可以作为容器类数据类型的元素。
                3，函数名可以作为函数的参数。
                4，函数名可以作为函数的返回值。

            global nonlocal

02 闭包
03 装饰器
04 迭代器
05 生成器
06 列表推导式，生成器表达式
07 匿名函数
08 内置函数