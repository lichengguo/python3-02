#!/usr/bin/env python3
#author:Alnk(李成果)
'''
谍战剧： 场景 发电报 滴滴滴滴滴滴滴
    计算机：文件的存储或者网络传输 高低电平01010101
    密码本：记录的就是010101 与文字的对应关系。
        今       0000001
        晚       0000101
        吃       0000110
        鸡       0010001

        # 0010101011010001
        0000001000010100001100010001

    ASCII：最初版本的密码本：英文字母，数字，特殊字符

        最开始：
            0000 0001   256种可能。
            0000 0001  8位 = 1个字节（bytes）。
            s1 = 'hello1' 6个字节
            一个字节表示一个字符。
            h: 01101000
            e: 01101001
            l: 01101100
            o: 01101110
            1:
            01101000 01101001 01101100 01101100 01101110 01101111

    unicode：万国码。把全世界所有的文字都记录起来。
        起初：一个字符两个字节
            h: 01101000 01101000
            中：01101000 01101000
            不够用
        升级：一个字符四个字节
            h: 01101000 01101000 01101000 01101000
            中: 01111000 01101000 01101000 01101000
        浪费空间，浪费流浪

    utf-8: 最少用8位一个字节表示一个字符。
        英文: 01101000 ASCII 英文字符：1个字节表示
        欧洲文: 01101000 01101000 一个字符两个字节表示
        中文: 01101000 01101100 01101000 一个字符用3个字节表示。
        'old男孩' utf-8的编码方式： 9个字节

    gbk:国标。
        只包含：英文和本国语言。
         h: 01101000 ASCII 英文字符：1个字节表示
         中: 01101000 01101100 一个字符用2个字节表示
         'old男孩' gbk的编码方式： 7个字节

    单位转化：
        8bit  ==   1Bytes
        1024Bytes ==  1KB
        1024KB    ==  1MB
        1024MB    ==  1GB
        1024GB    ==  1TB
'''
# 1， 不同密码本之间不能互相识别。报错，乱码。
# 2， 数据的存储或者网络传输不能用unicode的密码本进行编码。
#
# python3x 环境：
#         str类型内部编码方式为Unicode。
#         所以：str类数据不能直接存储硬盘，或者网络传输。
#
#       str: 操作方法
#       bytes: 拥有和str相同的操作方式，并且编码为非Unicode
#
# 英文：
#     str:
#         表现形式：'alex'
#         内部编码：unicode
#
#     bytes:
#         表现形式：b'alex'
#         内部编码：非unicode
#
# 中：
#     str:
#         表现形式：'alex'
#         内部编码：unicode
#
#     bytes:
#         表现形式：b'\xe4\xb8\xad\xe5\x9b\xbd'
#         内部编码：非unicode

#
# 英文
# str1 = 'barry'
# print(str1.upper())
# bytes
# b1 = b'barry'
# print(b1.upper())
#
# 中文
# s1 = '中国'
# b1 = s1.encode('utf-8')
# print(b1)

# 转换；
# str ---->bytes
# unicode ---> utf-8
# s1 = '中国'
# b1 = s1.encode('utf-8')  # 编码
# print(b1)
# # utf-8 ----> unicode
# s2 = b1.decode('utf-8') # 解码
# print(s2)

# s1 = '中国'
# b1 = s1.encode('gbk')  # 编码
# print(b1)
# # utf-8 ----> unicode
# s2 = b1.decode('gbk') # 解码
# print(s2)
#
# # gbk ---> utf-8
# b1 = b'\xd6\xd0\xb9\xfa'
# s1 = b1.decode('gbk')  # unicode
# b2 = s1.encode('utf-8')
# print(b2)