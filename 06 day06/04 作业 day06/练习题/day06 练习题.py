#!/usr/bin/env python3
# author:Alnk(李成果)


# 1、简述类、对象、实例化、实例是分别是什么
# 看图1
#
# class Dog:
#     x = 10
#
#     def __init__(self, name):
#         self.name = name
#
#     def bite(self):
#         print(' %s biting' % (self.name))
#
#
# d1 = Dog('tom')
# d1.bite()


# 2、请简述面向对象三大特性？
# 封装
#     在类中对 数据的赋值、内部调用 对外部用户是透明的（这里透明的意思是类的外部不能调用这些数据，但是类的内部可以调用），
#     这使类变成了一个胶囊或容器，里面包含着类的数据和方法
#
# 继承
#     一个类可以派生出子类，在这个父类里定义的属性、方法自动被子类继承
#
# 多态
#     多态是面向对象的重要特性,简单点说:“一个接口，多种实现”。
#     指一个基类(父类)中派生出了不同的子类，且每个子类在继承了同样的方法名的同时又对父类的方法做了不同的实现，这就是同一种事物表现出的多种形态。
#     多态允许将子类的对象当作父类的对象使用，某父类型的引用指向其子类型的对象,调用的方法是该子类型的方法。
#     这里引用和调用方法的代码编译前就已经决定了,而引用所指向的对象可以在运行期间动态绑定。


# 3、说说python中所说的封装是什么意思？
# 封装
#     在类中对 数据的赋值、内部调用 对外部用户是透明的（这里透明的意思是类的外部不能调用这些数据，但是类的内部可以调用），
#     这使类变成了一个胶囊或容器，里面包含着类的数据和方法


# 4、多态是怎么回事？在python中是如何体现的？


# 5、说说面向对象中“私有”的概念以及应用


# 6、在面向对象中有一些被装饰器装饰的方法，先说说有哪些装饰器，再说说这些装饰器的作用，以及装饰之后的效果


# 7、请说明新式类和经典类的区别，至少两个


# 8、请说出上面一段代码的输出并解释原因
#
# class Foo:
#     def func(self):
#         print('in father')
#
#
# class Son(Foo):
#     def func(self):
#         print('in son')
#
#
# s = Son()
# s.func()        # in son
# # 一个实例对象查找某个属性方法一定严格按照如下顺序
# # 实例对象的内存空间 ---> 实例对象对应的类空间里查找  ---> 实例对象对应的类空间的父类空间查找
